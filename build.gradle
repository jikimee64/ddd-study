buildscript {
    ext {
        mapstructVersion = "1.4.2.Final"
    }
}

plugins {
    id 'org.springframework.boot' version '2.6.6'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'

//    implementation 'org.springframework.boot:spring-boot-starter-graphql'
//    testImplementation 'org.springframework:spring-webflux'
//    testImplementation 'org.springframework.graphql:spring-graphql-test'

    //graphql
    //스키마를 정의하여 매핑하는 방식이 아닌 어노테이션을 사용하여 매핑
    //스키마와 resolver를 구현하지 않아도 GraphQL을 사용할 수 있어 편리하다는 장점
    // Multipart 를 이용한 파일 업로드 구현이 어렵다는 점
    //implementation 'io.leangen.graphql:graphql-spqr-spring-boot-starter:0.0.4'

//
//    //Query, Mutation등 다양한 graphQL 클래스,인터페이스를 제공하는 라이브러리
//    implementation 'com.graphql-java-kickstart:graphql-spring-boot-starter:12.0.0'
//    //graphql test tool인 playground를 이용하기위한 라이브러리
//    implementation 'com.graphql-java-kickstart:playground-spring-boot-starter:12.0.0'
//    //test code작성을 위해 여러가지 어노테이션을 제공하는 라이브러리
//    testImplementation 'com.graphql-java-kickstart:graphql-spring-boot-starter-test:12.0.0'

    implementation 'com.graphql-java:graphql-spring-boot-starter:5.0.2'
    implementation 'com.graphql-java:graphql-java-tools:5.2.4'

    implementation 'com.h2database:h2'

    // Lombok & Mapstruct
    compileOnly 'org.projectlombok:lombok'
    implementation "org.mapstruct:mapstruct:${mapstructVersion}"
    annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"
    annotationProcessor 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok-mapstruct-binding:0.2.0'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    testImplementation("org.projectlombok:lombok")
    testAnnotationProcessor("org.projectlombok:lombok")

    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'mysql:mysql-connector-java'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
    useJUnitPlatform()
}
